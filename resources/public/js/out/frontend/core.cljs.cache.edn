{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name frontend.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core, http cljs-http.client, cljs-http.client cljs-http.client, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async}, :defs {state {:name frontend.core/state, :file "src_js/frontend.cljs", :line 7, :column 1, :end-line 7, :end-column 11, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend.cljs", :line 7, :column 6, :end-line 7, :end-column 11}}, new-user {:protocol-inline nil, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend.cljs", :line 9, :column 7, :end-line 9, :end-column 15, :arglists (quote ([user]))}, :name frontend.core/new-user, :variadic false, :file "src_js/frontend.cljs", :end-column 15, :method-params ([user]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([user]))}, page-root {:protocol-inline nil, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([user]))}, :name frontend.core/page-root, :variadic false, :file "src_js/frontend.cljs", :end-column 16, :method-params ([user]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([user]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:else :recur :login :div :body}, :order [:body :recur :else :div :login]}, :doc nil}