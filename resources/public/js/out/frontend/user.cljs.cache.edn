{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name frontend.user, :imports nil, :requires {http cljs-http.client, cljs-http.client cljs-http.client, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async}, :defs {new-user {:protocol-inline nil, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend/user.cljs", :line 6, :column 7, :end-line 6, :end-column 15, :arglists (quote ([state user]))}, :name frontend.user/new-user, :variadic false, :file "src_js/frontend/user.cljs", :end-column 15, :method-params ([state user]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state user]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :recur :status :error :body :user}, :order [:status :recur :error :user :body :else]}, :doc nil}