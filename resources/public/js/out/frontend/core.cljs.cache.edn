{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name frontend.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core, http cljs-http.client, cljs-http.client cljs-http.client, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async}, :defs {state {:name frontend.core/state, :file "src_js/frontend.cljs", :line 7, :column 1, :end-line 7, :end-column 11, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend.cljs", :line 7, :column 6, :end-line 7, :end-column 11}}, new-user {:protocol-inline nil, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend.cljs", :line 8, :column 7, :end-line 8, :end-column 15, :arglists (quote ([user]))}, :name frontend.core/new-user, :variadic false, :file "src_js/frontend.cljs", :end-column 15, :method-params ([user]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([user]))}, sidebar {:protocol-inline nil, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend.cljs", :line 17, :column 7, :end-line 17, :end-column 14, :arglists (quote ([{:keys [avatar_url name html_url login public_repos]} user]))}, :name frontend.core/sidebar, :variadic false, :file "src_js/frontend.cljs", :end-column 14, :method-params ([p__28092 user]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [avatar_url name html_url login public_repos]} user]))}, twitcard {:protocol-inline nil, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend.cljs", :line 26, :column 7, :end-line 26, :end-column 15, :arglists (quote ([{:keys [message commit_url sha repo_url repo_name timestamp_pretty]} commit]))}, :name frontend.core/twitcard, :variadic false, :file "src_js/frontend.cljs", :end-column 15, :method-params ([p__28097 commit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [message commit_url sha repo_url repo_name timestamp_pretty]} commit]))}, timeline {:protocol-inline nil, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend.cljs", :line 35, :column 7, :end-line 35, :end-column 15, :arglists (quote ([commits]))}, :name frontend.core/timeline, :variadic false, :file "src_js/frontend.cljs", :end-column 15, :method-params ([commits]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([commits]))}, content-container {:protocol-inline nil, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend.cljs", :line 40, :column 7, :end-line 40, :end-column 24, :arglists (quote ([user]))}, :name frontend.core/content-container, :variadic false, :file "src_js/frontend.cljs", :end-column 24, :method-params ([user]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([user]))}, page-root {:protocol-inline nil, :meta {:file "/Users/rgscherf/projects/twit/src_js/frontend.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([user]))}, :name frontend.core/page-root, :variadic false, :file "src_js/frontend.cljs", :end-column 16, :method-params ([user]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([user]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:html_url :commit_url :repo_name :else :name :recur :src :login :div :status :id :class :commits :error :public_repos :timestamp_pretty :body :repo_url :user :sha :href :img :a :message :avatar_url :span}, :order [:status :recur :error :user :body :else :avatar_url :name :html_url :login :public_repos :div :class :img :src :span :id :a :href :message :commit_url :sha :repo_url :repo_name :timestamp_pretty :commits]}, :doc nil}